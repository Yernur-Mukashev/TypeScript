// Задание 5. Алгоритмическая задача
// Что нужно сделать:
// Используя примитивную типизацию с помощью TypeScript, напишите код, который:
// Принимает число.
// Возводит в квадрат все ЦИФРЫ этого числа и конкатенирует их, то есть склеивает обратно в одно число и возвращает его.
// Если число отрицательное — функция должна вернуть его обратно.
// Пример:
// 9119 → 9 1 1 9 → 81 1 1 81 → 811181

function squareDigits(num: number): string | number {
    if (num < 0) { // Если число отрицательное, просто возвращаем его
        return num;
    }

    const digits = num.toString().split(''); // Разбиваем строку на массив цифр

    const squaredDigits = digits.map(digit => { // Создаём новый массив с квадратами каждой цифры
        const digitNumber = Number(digit); // Преобразуем строку в число
        return (digitNumber ** 2).toString(); // Возводим в квадрат и преобразуем обратно в строку
    });

    return squaredDigits.join(''); // Склеиваем массив строк в одну строку и возвращаем результат
}

// Примеры использования
console.log(squareDigits(9119)); // "811181"
console.log(squareDigits(-53)); // -53
console.log(squareDigits(0)); // "0"
console.log(squareDigits(77)); // "4949"
console.log(squareDigits(11111)); // "11111"


// Критерии оценки:
// Принято:
// Функция корректно обрабатывает целые и отрицательные числа.
// Использована типизация примитивов.
// Аргументы и возвращаемое значение функции типизированы.
// На доработку:
// Код не проходит все кейсы.
// В коде не использована типизация.